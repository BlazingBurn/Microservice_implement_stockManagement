# version: '3.8'

# services:
#   flask-app:
#     build:
#       context: ./flask_app
#     ports:
#       - "5000:5000"
#     networks:
#       - my-network
#     volumes:
#       - ./app:/app 
#     depends_on:
#       - sql-server

#   sql-server:
#     build:
#       context: ./sql_server
#     ports:
#       - "1433:1433"
#     environment:
#       ACCEPT_EULA: "Y"
#       SA_PASSWORD: "abcDEF123#"
#       MSSQL_PID: "Developer"
#     expose:
#       - "1433"
#     networks:
#       - my-network
#     volumes:
#       - ./sql_data:/var/opt/mssql
#     command: ["/bin/bash", "-c", "(/opt/mssql/bin/sqlservr --accept-eula &) | grep -q 'Service Broker manager has started' && /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P abcDEF123# -i /src/filldata.sql"]
#     # command: ["/bin/bash", "-c", "(/opt/mssql/bin/sqlservr --accept-eula &) && sleep 10 && /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P abcDEF123# -i /src/filldata.sql"]

# networks:
#   my-network:

version: '3'

services:

  # Service du backend SQL Server
  sql-server-backend:
    build:
      context: ./sql_server
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "abcDEF123#"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    networks:
      - my-network

  # Service du frontend Flask
  flask-frontend:
    build:
      context: ./flask_app
    ports:
      - "5000:5000"
    depends_on:
      - sql-server-backend
    networks:
      - my-network
      - mynetworknginx

  nginx-proxy:
    image: nginx
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    networks: 
      - mynetworknginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/certs
    depends_on:
      - flask-frontend
    restart: always

  tests:
    build:
      context: ./test
    depends_on:
      - flask-frontend
      - sql-server-backend
    volumes:
      - ./flask_app:/app
      - ./tests:/tests

networks:
  my-network:
    driver: bridge
  mynetworknginx:
    driver: bridge